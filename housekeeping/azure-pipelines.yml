schedules:
  - cron: "0 0 * * *"
    displayName: Daily midnight Housekeeping Tasks
    branches:
      include:
      - master
    always: true

trigger:
 batch: true
 branches:
   include:
     - feature/*
 paths:
   include:
     - housekeeping/*

pr: none

resources:
  repositories:
  - repository: AdminAcceptanceTests
    type: github
    name: nhs-digital-gp-it-futures/AdminAcceptanceTests
    endpoint: nhs-digital-gp-it-futures

  - repository: buying-catalogue-admin
    type: github
    name: nhs-digital-gp-it-futures/buying-catalogue-admin
    endpoint: nhs-digital-gp-it-futures

  - repository: BuyingCatalogueDocumentService
    type: github
    name: nhs-digital-gp-it-futures/BuyingCatalogueDocumentService
    endpoint: nhs-digital-gp-it-futures

  - repository: BuyingCatalogueIdentity
    type: github
    name: nhs-digital-gp-it-futures/BuyingCatalogueIdentity
    endpoint: nhs-digital-gp-it-futures

  - repository: BuyingCatalogueOrdering
    type: github
    name: nhs-digital-gp-it-futures/BuyingCatalogueOrdering
    endpoint: nhs-digital-gp-it-futures

  - repository: BuyingCatalogueService
    type: github
    name: nhs-digital-gp-it-futures/BuyingCatalogueService
    endpoint: nhs-digital-gp-it-futures

  - repository: MarketingPageAcceptanceTests
    type: github
    name: nhs-digital-gp-it-futures/MarketingPageAcceptanceTests
    endpoint: nhs-digital-gp-it-futures

  - repository: marketing-pages
    type: github
    name: nhs-digital-gp-it-futures/marketing-pages
    endpoint: nhs-digital-gp-it-futures

  - repository: order-form
    type: github
    name: nhs-digital-gp-it-futures/order-form
    endpoint: nhs-digital-gp-it-futures

  - repository: OrderFormAcceptanceTests
    type: github
    name: nhs-digital-gp-it-futures/OrderFormAcceptanceTests
    endpoint: nhs-digital-gp-it-futures

### Auto-included - noted here for completeness
#  - repository: platform-helm
#    type: github
#    name: nhs-digital-gp-it-futures/platform-helm
#    endpoint: nhs-digital-gp-it-futures

  - repository: public-browse
    type: github
    name: nhs-digital-gp-it-futures/public-browse
    endpoint: nhs-digital-gp-it-futures

  - repository: PublicBrowseAcceptanceTests
    type: github
    name: nhs-digital-gp-it-futures/PublicBrowseAcceptanceTests
    endpoint: nhs-digital-gp-it-futures

jobs:
  - job: queryRepos
    displayName: Get branches from each repo and clear down resources
    pool:
      vmImage: 'ubuntu-latest'

    variables:
    - name: outDebug
      value: "false"
    - name: gitRepos
      value: "PublicBrowseAcceptanceTests,buying-catalogue-admin,BuyingCatalogueDocumentService,BuyingCatalogueIdentity,BuyingCatalogueOrdering,BuyingCatalogueService,MarketingPageAcceptanceTests,marketing-pages,order-form,OrderFormAcceptanceTests,platform-helm,public-browse,PublicBrowseAcceptanceTests"

    steps:
    - checkout: AdminAcceptanceTests
    - checkout: buying-catalogue-admin
    - checkout: BuyingCatalogueDocumentService
    - checkout: BuyingCatalogueIdentity
    - checkout: BuyingCatalogueOrdering
    - checkout: BuyingCatalogueService
    - checkout: MarketingPageAcceptanceTests
    - checkout: marketing-pages
    - checkout: order-form
    - checkout: OrderFormAcceptanceTests
    - checkout: self
      persistCredentials: true
    - checkout: public-browse
    - checkout: PublicBrowseAcceptanceTests

    - task: AzureCLI@2
      name: disableEnhancedAKSFirewall
      displayName: Disable Enhanced AKS Firewall Restrictions
      inputs:
        azureSubscription: 'NHSAPP-BuyingCatalogue (Non-Prod)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: 'az aks update -n gpitfutures-development-aks -g gpitfutures-development-rg-aks --api-server-authorized-ip-ranges "" > /dev/null'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'NHSAPP-BuyingCatalogue (Non-Prod)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: 'az aks get-credentials -n gpitfutures-development-aks -g gpitfutures-development-rg-aks'
      name: kubectlContext
      displayName: Get Kubernetes Context

    - task: AzureCLI@2
      name: disableEnhancedStorageFirewall
      displayName: Disable Enhanced SA Firewall Restrictions
      inputs:
        azureSubscription: 'NHSAPP-BuyingCatalogue (Non-Prod)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: az storage account update --resource-group gpitfutures-development-rg-sa --name gpitfuturesdevelopment --default-action Allow > /dev/null

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'NHSAPP-BuyingCatalogue (Non-Prod)'
        scriptType: 'pscore'
        scriptLocation: 'scriptPath'
        scriptPath: ./platform-helm/housekeeping/housekeepingGIT.ps1
        arguments: > 
          -directories "$(gitRepos)"
      name: housekeepingGIT
      displayName: Housekeeping - Report on Git Repos

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'NHSAPP-BuyingCatalogue (Non-Prod)'
        scriptType: 'pscore'
        scriptLocation: 'scriptPath'
        scriptPath: ./platform-helm/housekeeping/housekeepingAKS.ps1
        arguments: > 
          -dbServer "gpitfutures-development-sql-pri"
          -resourceGroup "gpitfutures-development-rg-sql-pri"
          -azureStorageConnectionString $(az storage account show-connection-string --name gpitfuturesdevelopment --resource-group gpitfutures-development-rg-sa --query connectionString -o tsv)
          -directories "$(gitRepos)"
          -debugging "$(outDebug)"
      name: housekeepingAKS
      displayName: Housekeeping - Clear down AKS

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'NHSAPP-BuyingCatalogue (Non-Prod)'
        scriptType: 'pscore'
        scriptLocation: 'scriptPath'
        scriptPath: ./platform-helm/housekeeping/housekeepingSQL.ps1
        arguments: > 
          -dbServer "gpitfutures-development-sql-pri"
          -resourceGroup "gpitfutures-development-rg-sql-pri"
          -directories "$(gitrepos)"
          -debugging "$(outDebug)"
      name: housekeepingSQL
      displayName: Housekeeping - Clear down SQL

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'NHSAPP-BuyingCatalogue (Non-Prod)'
        scriptType: 'pscore'
        scriptLocation: 'scriptPath'
        scriptPath: ./platform-helm/housekeeping/housekeepingSA.ps1
        arguments: > 
          -azureStorageConnectionString "$(az storage account show-connection-string --name gpitfuturesdevelopment --resource-group gpitfutures-development-rg-sa --query connectionString -o tsv)"
          -directories "$(gitRepos)"
          -debugging "$(outDebug)"
      name: housekeepingSA
      displayName: Housekeeping - Clear down Storage Account Containers

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'NHSAPP-BuyingCatalogue (Non-Prod)'
        scriptType: 'pscore'
        scriptLocation: 'scriptPath'
        scriptPath: ./platform-helm/housekeeping/housekeepingVols.ps1
        arguments: > 
          -resourceGroup "gpitfutures-development-rg-aks-nodes"
          -debugging "$(outDebug)"
      name: housekeepingVols
      displayName: Housekeeping - Clear down Kubernetes Persistent Volumes

  - job: deployACtoDevEnvironment
    displayName: Deploy and run AC tests to Dev
    pool:
      vmImage: 'ubuntu-latest'

    variables:
    - group: dev-core-secrets
    - name: namespace
      value: "development"

    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'NHSAPP-BuyingCatalogue (Non-Prod)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: 'az aks get-credentials -n gpitfutures-development-aks -g gpitfutures-development-rg-aks'
      name: kubectlContext
      displayName: Get Kubernetes Context

    - task: HelmInstaller@1
      displayName: 'install helm'
      inputs:
        helmVersionToInstall: 'latest'

    - task: AzureCLI@2
      name: setupHelmRepos
      displayName: Setup Helm Repos
      inputs:
        azureSubscription: 'NHSAPP-BuyingCatalogue (Non-Prod)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
            acr="gpitfuturesdevacr"

            acrUsername=$(az acr credential show --name $acr --query username -o tsv)
            acrPassword=$(az acr credential show --name $acr --query passwords[0].value -o tsv)
            acrLoginSvr=$(az acr list --query "[?name=='$acr'].loginServer" -o tsv)

            helm repo add $acr https://$acrLoginSvr/helm/v1/repo --username $acrUsername --password $acrPassword
            helm repo add stable https://charts.helm.sh/stable/
            helm repo update

    - bash: |
        ./update-chart-versions.sh -v development
      name: UpdateVersions
      displayName: Grab and update component versions

    - bash: |
        chart="src/buyingcatalogue"
        helm dependency update $chart
      name: updateDependencies
      displayName: Update Dependencies for Chart

    - bash: |
          cd selenium-grid 
          ./launch-selenium-grid.sh --add "$(namespace).dev.buyingcatalogue.digital.nhs.uk"
      name: setupSeleniumGrid
      displayName: Setup Selenium Grid

    - bash: |
        ping -c 30 127.0.0.1
      name: delayNextStep
      displayName: Delay Next Step

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'NHSAPP-BuyingCatalogue (Non-Prod)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
            sqlDbAdminUser=$(az sql server list --query "[?name=='gpitfutures-development-sql-pri'].administratorLogin" -o tsv)
            sqlDbAdminPass=$(az keyvault secret show --vault-name gpit-development-kv --name "gpitdevelopmentsqladminpassword" --query value -o tsv)
            saConnectionString=$(az storage account show-connection-string --name gpitfuturesdevelopment --resource-group gpitfutures-development-rg-sa --query connectionString -o tsv)
            appgwPip=$(az network public-ip show --name gpitfutures-development-pip --resource-group gpitfutures-development-rg-appgw --query ipAddress -o tsv)
            redisHost=$(az redis show --resource-group gpitfutures-dev-core-rg-redis --name gpitfutures-dev-core-redis --query hostName -o tsv)
            redisPass=$(az redis list-keys --resource-group gpitfutures-dev-core-rg-redis --name gpitfutures-dev-core-redis --query primaryKey -o tsv)
            
            ./launch-or-update-azure.sh \
              -c local-cache \
              -n development \
              -d gpitfutures-development-sql-pri.database.windows.net \
              -u $sqlDbAdminUser \
              -p $sqlDbAdminPass \
              --base-path "development.dev.buyingcatalogue.digital.nhs.uk" \
              -w true \
              -s "/p:DatabaseEdition=Standard /p:DatabaseServiceObjective=S0" \
              -a "$saConnectionString" \
              -i "$appgwPip" \
              -r $redisHost \
              -q $redisPass \
              --cookie-secret=$(srt-cookiesecret) \
              --client-secret=$(srt-clientsecret) \
              --db-user-pass=$(srt-sqldevdbpass) \
              -f "azure-dev.yaml" \
              --helm-upgrade-args "--set pb-ac-tests.testFilter= --set admin-ac-tests.testFilter= --set mp-ac-tests.testFilter= --set of-ac-tests.enabled=true --set of-ac-tests.testFilter="
      name: deploySystem
      displayName: Deploy System

    - bash: |
        ping -c 1800 127.0.0.1
      name: delayNextStep30m
      displayName: Delay Next Step again (30 mins)

    - bash: './get-test-results.sh -n $(namespace)'
      displayName: Grab test results

    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'VSTest'
        testResultsFiles: '**/*.trx' 
        mergeTestResults: true
        failTaskOnFailedTests: false
        testRunTitle: 'Acceptance test results (Full Suite)'
        publishRunAttachments: true

    - task: AzureCLI@2
      name: enableEnhancedAKSFirewall
      displayName: Enable Enhanced AKS Firewall Restrictions
      inputs:
        azureSubscription: 'NHSAPP-BuyingCatalogue (Non-Prod)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
            ipRange=$(az keyvault secret show --vault-name gpitfutures-dev-core-kv --name "gpitdevbjssvpn" --query value -o tsv)
            az aks update -n gpitfutures-development-aks -g gpitfutures-development-rg-aks --api-server-authorized-ip-ranges "$ipRange" > /dev/null

    - task: AzureCLI@2
      name: enableEnhancedStorageFirewall
      displayName: Enable Enhanced SA Firewall Restrictions
      inputs:
        azureSubscription: 'NHSAPP-BuyingCatalogue (Non-Prod)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: az storage account update --resource-group gpitfutures-development-rg-sa --name gpitfuturesdevelopment --default-action Deny > /dev/null
