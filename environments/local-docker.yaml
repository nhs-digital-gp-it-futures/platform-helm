dbPassword:
clientSecret:
appBaseUrl: "https://host.docker.internal"
baseIsapiEnabledUrl: "https://host.docker.internal/identity"

azurite:
  enabled: true
  disabledUrl: "host.docker.internal"
  service:
    type: LoadBalancer

db:
  enabled: true
  service:
    type: LoadBalancer

bapi-db-deploy:
  enabled: true
  imagePullSecrets: 
  - name: regcredlocal
  db:
    includeImport: "TRUE"
    includePublish: "TRUE"
    insertTestData: "TRUE"
  
dapi:
  enabled: true
  disabledUrl: "host.docker.internal"
  imagePullSecrets: 
  - name: regcredlocal
  service:
    type: LoadBalancer

bapi:  
  enabled: true
  disabledUrl: "host.docker.internal"
  imagePullSecrets: 
  - name: regcredlocal
  service:
    type: LoadBalancer

isapi-db:
  enabled: true
  disabledUrl: "host.docker.internal"
  useLocalImage: false
  imagePullSecrets: 
  - name: regcredlocal  
  service:
    type: LoadBalancer

isapi:
  enabled: true
  disabledUrl: "http://host.docker.internal:5102/identity"  
  imagePullSecrets: 
  - name: regcredlocal
  service:
    type: LoadBalancer
  clients: 
    - clientId: "NodeClient"
      clientName: "Main Node Client"
      allowedGrantTypes: "Code"
      allowOfflineAccess : false
      requireClientSecret : true
      secret: 
        name: "bc-buyingcatalogue"
        key: oidc-client-secret 
      requirePkce : true
      requireConsent: true
      redirectUrls:         
        - https://host.docker.internal/oauth/callback
        - https://docker.for.win.localhost/oauth/callback
        - https://docker.for.mac.localhost/oauth/callback
        - https://host.docker.internal/admin/oauth/callback
        - https://docker.for.mac.localhost/admin/oauth/callback
        - https://docker.for.win.localhost/admin/oauth/callback
        - https://host.docker.internal/order/oauth/callback
        - https://docker.for.mac.localhost/order/oauth/callback
        - https://docker.for.win.localhost/order/oauth/callback
        - http://docker.for.win.localhost:3000/oauth/callback
        - http://docker.for.mac.localhost:3000/oauth/callback
        - http://docker.for.win.localhost:3005/admin/oauth/callback
        - http://docker.for.mac.localhost:3005/admin/oauth/callback
        - http://docker.for.win.localhost:3006/order/oauth/callback
        - http://docker.for.mac.localhost:3006/order/oauth/callback
        - http://localhost:3000/oauth/callback
        - http://localhost:3005/admin/oauth/callback
        - http://localhost:3006/order/oauth/callback
      postLogoutRedirectUrls: 
        - https://host.docker.internal/signout-callback-oidc
        - https://docker.for.win.localhost/signout-callback-oidc
        - https://docker.for.mac.localhost/signout-callback-oidc
        - https://host.docker.internal/admin/signout-callback-oidc
        - https://docker.for.win.localhost/admin/signout-callback-oidc
        - https://docker.for.mac.localhost/admin/signout-callback-oidc
        - https://host.docker.internal/order/signout-callback-oidc
        - https://docker.for.win.localhost/order/signout-callback-oidc
        - https://docker.for.mac.localhost/order/signout-callback-oidc
        - http://docker.for.win.localhost:3000/signout-callback-oidc
        - http://docker.for.mac.localhost:3000/signout-callback-oidc
        - http://docker.for.win.localhost:3005/admin/signout-callback-oidc
        - http://docker.for.mac.localhost:3005/admin/signout-callback-oidc
        - http://docker.for.win.localhost:3006/order/signout-callback-oidc
        - http://docker.for.mac.localhost:3006/order/signout-callback-oidc           
        - http://localhost:3000/signout-callback-oidc
        - http://localhost:3005/admin/signout-callback-oidc
        - http://localhost:3006/order/signout-callback-oidc
  allowInvalidCertificate: true
  serviceDependencies:
    email:
      subjectPrefix: dev
  ingress:
    enabled: true
    annotations: 
      kubernetes.io/ingress.class: nginx
      ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
    hosts:
      - paths: 
          - /identity/health
          - /identity/css  
          - /identity/nhsuk-frontend
          - /identity/Account
          - /identity/account
          - /identity/Consent
          - /identity/consent
          - /identity/Error
          - /identity/error
          - /identity/connect
          - /identity/.well-known

oapi:
  enabled: true
  disabledUrl: "host.docker.internal"
  imagePullSecrets: 
  - name: regcredlocal
  service:
    type: LoadBalancer   
  allowInvalidCertificate: true

ordapi:
  enabled: true
  disabledUrl: "host.docker.internal"
  imagePullSecrets: 
  - name: regcredlocal
  service:
    type: LoadBalancer
  allowInvalidCertificate: true

ordapi-db:
  imagePullSecrets: 
  - name: regcredlocal
  service:
    type: LoadBalancer

email:
  enabled: true
  disabledUrl: ""  
  imagePullSecrets: 
  - name: regcredlocal
  service:
    type: LoadBalancer

file-loader:
  enabled: true
  imagePullSecrets: 
  - name: regcredlocal

mp:
  enabled: true
  imagePullSecrets: 
  - name: regcredlocal
  service:
    type: LoadBalancer
  ingress:
    enabled: true
    annotations: 
      kubernetes.io/ingress.class: nginx
      ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"

pb: 
  enabled: true  
  imagePullSecrets: 
  - name: regcredlocal
  service:
    type: LoadBalancer    
  ingress:
    enabled: true
    annotations: 
      kubernetes.io/ingress.class: nginx
      ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
    hosts:
      - paths: 
          - /
    tls: []
  baseUri: "https://host.docker.internal"
  env:
    values:
      - name: NODE_TLS_REJECT_UNAUTHORIZED
        value: "0"

admin: 
  enabled: true
  disabledUrl: "host.docker.internal"
  imagePullSecrets: 
  - name: regcredlocal
  service:
    type: LoadBalancer
  ingress:
    enabled: true
    annotations: 
      kubernetes.io/ingress.class: nginx
      ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
    hosts:
      - paths: 
          - /admin
    tls: []      
  env:
      values:
        - name: NODE_TLS_REJECT_UNAUTHORIZED
          value: "0"

of: 
  enabled: true 
  imagePullSecrets: 
  - name: regcredlocal
  service:
    type: LoadBalancer
  ingress:
    enabled: true
    annotations: 
      kubernetes.io/ingress.class: nginx
      ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
    hosts:
      - paths: 
          - /order
    tls: []  
  baseUri: "/order"  
  env:
      values:
        - name: NODE_TLS_REJECT_UNAUTHORIZED
          value: "0"

redis:
  enabled: true
  cluster:
    enabled: false
  usePassword: false
  master:
    service:
      type: LoadBalancer

redis-commander:
  enabled: true
  service:
    port: 8181    